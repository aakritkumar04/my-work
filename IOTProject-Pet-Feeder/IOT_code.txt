
#define BLYNK_TEMPLATE_ID "TMPL-hrV3sF7"
#define BLYNK_DEVICE_NAME "PROJECTWORK"
#define BLYNK_AUTH_TOKEN "2HbAycJXjPowyld5oh8cQRxoRRrRv0TR"


#include <ArduinoJson.h>
#include "time.h"
#include <HTTPClient.h>

#include<SPI.h>
#include <Servo.h>
#include<Ethernet.h>
#define BLYNK_PRINT Serial
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>


char* SSID = "Esp32";
char* PASS = "esp321234";
String cse_ip = "192.168.51.233"; // YOUR IP from ipconfig/ifconfig
String cse_port = "8080";
String server = "http://" + cse_ip + ":" + cse_port + "/~/in-cse/in-name/";
String ae = "ultrasonic";
String cnt = "distnode";


// Your WiFi credentials.
// Set password to "" for open networks.
//#define SSID "Esp32"
//const char PASS[] = "esp321234";


int buzzerpin = 14;
int buzzervcc = 12;
int buzzergnd = 27;
int petarr = 2;
int petnot = 1;
int t = 10000;
int trig = 2;
int echo = 4;
int dt = 12;
int powerpin = 23;
const int servopin = 13;

Servo servo;

void createCi(String val)
{
  HTTPClient http;
  http.begin(server + ae + "/" + cnt + "/");

  http.addHeader("X-M2M-Origin", "admin:admin");
  http.addHeader("Content-Type", "application/json;ty=4");
  int code = http.POST("{\"m2m:cin\": {\"cnf\":\"application/json\",\"con\": " + String(val) + "}}");
  Serial.println(code);
  if (code == -1)
  {
    Serial.println("UNABLE TO CONNECT TO THE SERVER");
  }

  http.end();
}


void setup() {
  Serial.begin(9600);
  WiFi.begin(SSID, PASS);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.println("Connecting to WiFi...");
    delay(500);
  }
  Serial.println("WiFi Connected!");
  pinMode(buzzervcc, OUTPUT);
  pinMode(buzzergnd, OUTPUT);
  pinMode(buzzerpin, OUTPUT);
  pinMode(echo, INPUT);
  servo.attach(servopin);
  pinMode(powerpin, OUTPUT);
  pinMode(trig, OUTPUT);
  pinMode(servopin, OUTPUT);
  digitalWrite(powerpin, HIGH);
  digitalWrite(trig, LOW);
  digitalWrite(buzzervcc, HIGH);
  digitalWrite(buzzergnd, LOW);
  digitalWrite(buzzerpin,HIGH);
  delay(10);
  Blynk.begin(BLYNK_AUTH_TOKEN, SSID, PASS);
}

int calc_dis()
{
  int duration, distance;
  digitalWrite(trig, HIGH);
  delay(dt);
  digitalWrite(trig, LOW);
  duration = pulseIn(echo, HIGH);
  distance = (duration / 2) / 29.1;
  return distance;
}

void running() {
  if (calc_dis() < 80) {
    // execute this code if the switch widget is now ON
    digitalWrite(buzzerpin, LOW); 
    delay(2000);
    digitalWrite(buzzerpin, HIGH);
    for (int i = 0; i <= 140; i++)
    {
      servo.write(i);
      delay(1);
    }
    delay(1000);
    for (int i = 140; i >= 0; i--)
    {
      servo.write(i);
      delay(1);
    }
    delay(1000);
  }
  else {
    delay(dt);
  }
}

void loop() {
  Blynk.run();
  float dist = calc_dis();
  if (dist <= 80) {
    Blynk.virtualWrite(V1, dist);
  }
  else {
    Blynk.virtualWrite(V1, 0);
  }
  Serial.println(dist);
  if (dist < 80) {
    delay(100);
    if (!isnan(dist)) {
      createCi(String(petarr));
    }
  }
  else {
    if (!isnan(dist)) {
      createCi(String(petnot));
    }
  }
  delay(1000);
}

BLYNK_WRITE(V0) {
  Serial.println(param.asInt());
  if (param.asInt())
  {
    digitalWrite(buzzerpin, LOW); 
    delay(1000);
    digitalWrite(buzzerpin, HIGH);
    digitalWrite(servopin, LOW);
    running();
  }
  else {
    digitalWrite(servopin, HIGH);
    delay(100);
  }
}

BLYNK_WRITE(V2) {
  if (param.asInt())
  {
    digitalWrite(servopin, LOW);
    running();
  }
  else {
    digitalWrite(servopin, HIGH);
    delay(100);
  }
}
